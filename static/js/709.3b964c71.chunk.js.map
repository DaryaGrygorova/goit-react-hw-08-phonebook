{"version":3,"file":"static/js/709.3b964c71.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Phonebook/Filter/Filter.styled.js","components/Phonebook/Filter/Filter.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Phonebook/ContactList/ContactItem/ContactItem.styled.js","components/Phonebook/ContactList/ContactItem/ContactItem.jsx","components/Phonebook/ContactList/ContactList.styled.js","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","Pages/ContactsPage.jsx","components/Section/Section.styled.js","components/Section/Section.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectContactsFilter], (contacts, filter) => {\n        const filteredContacts = contacts?.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase())\n        );\n\n        return filteredContacts;\n    }\n);","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 15px;\n  margin: 0 auto;\n  max-width: 600px;\n  border: 1px solid #6f4e37;\n  border-radius: 10px;\n`;\n\nexport const Label = styled.label`\nfont-weight: 700;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid #6f4e37;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  width: 130px;\n  padding-top: ${p => p.theme.space[1]}px;\n  padding-bottom: ${p => p.theme.space[1]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.md};\n  border-color: ${p => p.theme.colors.primary};\n  background-color: ${p => p.theme.colors.primary};\n  color: ${p => p.theme.colors.white};\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n    color: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.white};\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { StyledForm, Label, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const nameRegExp =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n  const phoneNumberRegExp =\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required('\"Name\" is a required field')\n      .matches(\n        nameRegExp,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      ),\n    number: yup\n      .string()\n      .required('\"Number\" is a required field')\n      .matches(\n        phoneNumberRegExp,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      ),\n  });\n\n  const onSubmitHandler = (value, { resetForm }) => {\n    const normalizedName = value.name.toLowerCase();\n\n    contacts?.find(({ name }) => name.toLowerCase().includes(normalizedName))\n      ? alert(`${value.name} is already in contacts.`)\n      : dispatch(addContact({ ...value }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmitHandler}\n    >\n      <StyledForm>\n        <Label htmlFor={nameInputId}>Name</Label>\n        <Input id={nameInputId} type=\"text\" name=\"name\" autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <Label htmlFor={numberInputId}>Number</Label>\n        <Input id={numberInputId} type=\"tel\" name=\"number\" autoComplete=\"off\" />\n        <ErrorMessage name=\"number\" component=\"div\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0 auto 15px;\n  max-width: 600px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 400;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #6f4e37;\n  border-radius: 4px;\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectContactsFilter } from 'redux/contacts/contactsSelectors';\n\nimport { Form, Input, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(selectContactsFilter);\n\n  const onChangeHandle = e => dispatch(setFilter(e.currentTarget.value));\n  const dispatch = useDispatch();\n\n  return (\n    <Form>\n      <Label htmlFor=\"contactsFilter\">Find contacts by name </Label>\n\n      <Input\n        id=\"contactsFilter\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChangeHandle}\n        autoComplete=\"off\"\n      />\n    </Form>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n   display: block;\n    text-align: center;\n    margin: 0 auto 15px;\n`;\n\n","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n}.isRequired;\n\nexport default Notification;\n","import styled from \"styled-components\";\n\nexport const Info = styled.p`\ndisplay: inline-block; \nmargin-right: ${p => p.theme.space[3]}px;\nmin-width: 200px;\n`;\n\nexport const Button = styled.button`\npadding-top:  ${p => p.theme.space[1]}px;\npadding-bottom: ${p => p.theme.space[1]}px;\npadding-left:  ${p => p.theme.space[3]}px;\npadding-right:  ${p => p.theme.space[3]}px;\nborder-radius: ${p => p.theme.radii.md};\nborder-color: ${p => p.theme.colors.primary};\nbackground-color: ${p => p.theme.colors.primary};\ncolor: ${p => p.theme.colors.white};\n\n:hover, :focus {\n    background-color: ${p => p.theme.colors.secondary};\n    color: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.white};\n    };\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nimport { Info, Button } from './ContactItem.styled';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const OnDeleteHandle = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Info>\n        {name}: {number}\n      </Info>\n      <Button type=\"button\" onClick={OnDeleteHandle}>\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n}.isRequired;\n\nexport default ContactItem;\n","import styled from \"styled-components\"\n\nexport const ContactItemWrap = styled.li`\n          display: flex;\n          gap: 16px;\n          flex-basis: 49%;\n          align-items: center;\n          justify-content: space-between;\n          padding: 10px;\n          border: 1px solid #6f4e37;\n          border-radius: 4px;\n          background-color: #fff;\n          `;","import { Box } from 'components/Box';\nimport ContactItem from './ContactItem';\nimport { ContactItemWrap } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Box\n      as=\"ul\"\n      display=\"flex\"\n      gridGap=\"10px\"\n      flexWrap=\"wrap\"\n      justifyContent=\"space-between\"\n    >\n      {contacts.map(({ name, number, id }) => (\n        <ContactItemWrap key={id}>\n          <ContactItem name={name} number={number} id={id} />\n        </ContactItemWrap>\n      ))}\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import { Box } from 'components/Box';\nimport Filter from './Filter';\nimport Notification from '../Notification';\nimport ContactList from './ContactList';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { userAuthSelector } from 'redux/user/userSelectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLogIn = useSelector(userAuthSelector.selectIsLogIn);\n  const contacts = useSelector(selectContacts);\n  const contactsIsLoading = useSelector(selectContactsIsLoading);\n\n  useEffect(() => {\n    if (isLogIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLogIn]);\n\n  return contactsIsLoading ? (\n    <Notification message=\"Wait a few seconds, the process is in progress...\" />\n  ) : contacts?.length ? (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      gridGap=\"10px\"\n      padding=\"0\"\n      margin=\"0 auto\"\n      maxWidth=\"650px\"\n    >\n      <Filter />\n      <ContactList />\n    </Box>\n  ) : (\n    <Notification message=\"There are no contacts.\" />\n  );\n};\n\nexport default Phonebook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { Box } from 'components/Box';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport Phonebook from 'components/Phonebook';\n\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { userAuthSelector } from 'redux/user/userSelectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLogIn = useSelector(userAuthSelector.selectIsLogIn);\n\n  useEffect(() => {\n    if (isLogIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLogIn]);\n\n  return (\n    <Box>\n      <h1>Phonebook</h1>\n\n      <Section>\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Phonebook />\n      </Section>\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\nmargin-bottom: ${p => p.theme.space[4]}px;\ntext-align: center;\n`;","import PropTypes from 'prop-types';\nimport { Box } from '../Box';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Box margin=\"0 auto 25px\" maxWidth=\"1440px\" as=\"section\">\n      {title && <Title>{title}</Title>}\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectContactsIsLoading","isLoading","selectContactsFilter","filter","selectFilteredContacts","toLowerCase","includes","StyledForm","styled","Form","Label","Input","Field","Button","p","theme","space","radii","md","colors","primary","white","secondary","dispatch","useDispatch","useSelector","nameInputId","nanoid","numberInputId","validationSchema","yup","shape","required","matches","number","initialValues","onSubmit","resetForm","normalizedName","alert","addContact","htmlFor","id","type","autoComplete","component","onChange","e","setFilter","currentTarget","Message","message","Info","onClick","deleteContact","ContactItemWrap","Box","as","display","gridGap","flexWrap","justifyContent","isLogIn","userAuthSelector","contactsIsLoading","useEffect","fetchContacts","flexDirection","padding","margin","maxWidth","Section","title","Title","children"],"sourceRoot":""}