{"version":3,"file":"static/js/469.b2874455.chunk.js","mappings":"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","sources":["components/ContactList/ContactItem/ContactItem.styled.js","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","redux/contacts/contactsSelectors.js"],"sourcesContent":["import { Box, Button, styled, Avatar } from '@mui/material';\n\nexport const StyledWrap = styled(Box)`\ndisplay: flex;\ngap: ${p=>p.theme.space[2]}px;\nalign-items: center;\nflex-wrap: nowrap;\n`;\n\nexport const StyledAvatar = styled(Avatar)`\nbackground-color: ${p=>p.theme.colors.avatar};\n`;\n\nexport const StyledButton = styled(Button)`\nborder-color: ${p=>p.theme.colors.primary};\nbackground-color: ${p=>p.theme.colors.primary};\ncolor: ${p=>p.theme.colors.text};\nwidth: 100%;\n\n:hover, :focus {\n    background-color: ${p=>p.theme.colors.secondary};\n    color: ${p=>p.theme.colors.white};\n    border-color: ${p=>p.theme.colors.white};\n    font-weight: 600;\n    };\n`;","import { LocalPhone } from '@mui/icons-material';\nimport { Grid, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nimport { StyledWrap, StyledAvatar, StyledButton } from './ContactItem.styled';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const OnDeleteHandle = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Grid container spacing={1} sx={{ alignItems: 'center' }}>\n        <Grid item xs={5}>\n          <StyledWrap>\n            <StyledAvatar>{name[0].toUpperCase()}</StyledAvatar>\n            <Typography variant=\"body1\">{name}</Typography>\n          </StyledWrap>\n        </Grid>\n        <Grid item xs={5}>\n          <StyledWrap>\n            <LocalPhone />\n            <Typography variant=\"subtitle1\">{number}</Typography>\n          </StyledWrap>\n        </Grid>\n        <Grid item xs={2}>\n          <StyledButton type=\"button\" onClick={OnDeleteHandle}>\n            Delete\n          </StyledButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n}.isRequired;\n\nexport default ContactItem;\n","import { List, ListItem, styled } from \"@mui/material\";\n\nexport const StyledList = styled(List)`\ndisplay: flex;\n gap: ${p=>p.theme.space[3]}px;\n flex-direction: column;\n`;\n\nexport const StyledListItem = styled(ListItem)`\n          display: flex;\n          gap: 16px;\n          flex-basis: 49%;\n          align-items: center;\n          justify-content: space-between;\n          padding: ${p=>p.theme.space[3]}px;\n          border-radius: ${p=>p.theme.radii.md};\n          background-color: ${p=>p.theme.colors.background};\n          `;","import { useSelector } from 'react-redux';\nimport { LinearProgress } from '@mui/material';\n\nimport ContactItem from './ContactItem';\nimport Notification from 'components/Notification';\n\nimport {\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectFilteredContacts,\n} from 'redux/contacts/contactsSelectors';\n\nimport { StyledList, StyledListItem } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const contactsFilter = useSelector(selectContactsFilter);\n  const isLoading = useSelector(selectContactsIsLoading);\n\n  return (\n    <>\n      {isLoading && <LinearProgress color=\"secondary\" />}\n      <StyledList dense={false}>\n        {contacts?.length > 0 ? (\n          contacts.map(({ name, number, id }) => (\n            <StyledListItem key={id}>\n              <ContactItem name={name} number={number} id={id} />\n            </StyledListItem>\n          ))\n        ) : (\n          <Notification\n            message={\n              contactsFilter ? 'No matches found' : 'Add your first contacts'\n            }\n          />\n        )}\n      </StyledList>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { Typography, styled } from '@mui/material';\n\nexport const StyledMessage = styled(Typography)`\n   display: block;\n    text-align: center;\n    margin: 0 auto ${p => p.theme.space[4]}px;\n    color: ${p => p.children ? 'red' : p.theme.colors.text};\n`;\n\n","import PropTypes from 'prop-types';\nimport { StyledMessage } from './Notification.styled';\n\nconst Notification = ({ message, error = false }) => {\n  return <StyledMessage component=\"p\">{message}</StyledMessage>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n  error: PropTypes.bool,\n}.isRequired;\n\nexport default Notification;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectContactsFilter], (contacts, contactsFilter) => {\n        const filteredContacts = contacts?.filter(({ name }) =>\n            name.toLowerCase().includes(contactsFilter.toLowerCase())\n        );\n\n        return filteredContacts;\n    }\n);"],"names":["StyledWrap","styled","Box","p","theme","space","StyledAvatar","Avatar","colors","avatar","StyledButton","Button","primary","text","secondary","white","name","number","id","dispatch","useDispatch","Grid","container","spacing","sx","alignItems","item","xs","toUpperCase","Typography","variant","LocalPhone","type","onClick","deleteContact","StyledList","List","StyledListItem","ListItem","radii","md","background","contacts","useSelector","selectFilteredContacts","contactsFilter","selectContactsFilter","isLoading","selectContactsIsLoading","LinearProgress","color","dense","length","map","Notification","message","StyledMessage","children","error","component","selectContacts","state","items","filter","createSelector","toLowerCase","includes"],"sourceRoot":""}