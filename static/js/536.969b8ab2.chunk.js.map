{"version":3,"file":"static/js/536.969b8ab2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/FromAuthor/FromAuthor.styled.js","components/FromAuthor/FromAuthor.jsx","Pages/ContactsPage/ContactsPage.styled.jsx","Pages/ContactsPage/ContactsPage.jsx","redux/contacts/contactsSelectors.js"],"sourcesContent":["import { Button, styled } from '@mui/material';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p=>p.theme.space[2]}px;\n  width: 245px;\n  padding: ${p=>p.theme.space[4]}px ${p=>p.theme.space[3]}px;\n  margin: 0 auto;\n  border-radius: ${p=>p.theme.radii.md};\n  background-color: ${p=>p.theme.colors.background};\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid #6f4e37;\n  padding: ${p=>p.theme.space[2]}px;\n  border-radius: ${p=>p.theme.radii.sm};\n  margin-bottom: ${p=>p.theme.space[2]}px;\n`;\n\nexport const StyledButton = styled(Button)`\n  width: 100%;\n  border-color: ${p=>p.theme.colors.primary};\n  background-color: ${p=>p.theme.colors.primary};\n  color: ${p=>p.theme.colors.text};\n  margin-top: ${p=>p.theme.space[3]}px;\n\n  :hover,\n  :focus {\n    font-weight: 600;\n    background-color: ${p=>p.theme.colors.secondary};\n    color: ${p=>p.theme.colors.white};\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { StyledForm, Input, StyledButton } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const nameRegExp =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n  const phoneNumberRegExp =\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required('\"Name\" is a required field')\n      .matches(\n        nameRegExp,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      ),\n    number: yup\n      .string()\n      .required('\"Number\" is a required field')\n      .matches(\n        phoneNumberRegExp,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      ),\n  });\n\n  const onSubmitHandler = (value, { resetForm }) => {\n    const normalizedName = value.name.toLowerCase();\n\n    contacts?.find(({ name }) => name.toLowerCase().includes(normalizedName))\n      ? alert(`${value.name} is already in contacts.`)\n      : dispatch(addContact({ ...value }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmitHandler}\n    >\n      <StyledForm>\n        <label htmlFor={nameInputId}>Name</label>\n        <Input id={nameInputId} type=\"text\" name=\"name\" autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"div\" style={{ color: 'red' }} />\n\n        <label htmlFor={numberInputId}>Number</label>\n        <Input id={numberInputId} type=\"tel\" name=\"number\" autoComplete=\"off\" />\n        <ErrorMessage name=\"number\" component=\"div\" style={{ color: 'red' }} />\n\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import { Box, styled, TextField } from '@mui/material';\n\nexport const Form = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p=>p.theme.space[3]}px;\n  max-width: 600px;\n`;\n\nexport const Input = styled(TextField)`\noutline: true;\nfont-size: 16px;\n  /* padding: ${p=>p.theme.space[2]}px; */\n  border-radius: ${p=>p.theme.radii.sm};\n  width: 200px;\n  background-color: ${p=>p.theme.colors.background};\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport {\n  selectContactsFilter,\n  selectContactsIsLoading,\n} from 'redux/contacts/contactsSelectors';\n\nimport { Form, Input } from './Filter.styled';\nimport { useEffect } from 'react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectContactsFilter);\n  const isContactsLoading = useSelector(selectContactsIsLoading);\n\n  const onChangeHandle = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  useEffect(() => {\n    if (isContactsLoading) {\n      dispatch(setFilter(''));\n    }\n  }, [dispatch, isContactsLoading]);\n\n  return (\n    <Form as=\"form\" onSubmit={e => e.preventDefault()}>\n      <label htmlFor=\"contactsFilter\">Find contacts by name </label>\n\n      <Input\n        id=\"contactsFilter\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChangeHandle}\n        autoComplete=\"off\"\n        color=\"secondary\"\n        size=\"small\"\n      />\n    </Form>\n  );\n};\n\nexport default Filter;\n","import { Paper, Typography, styled } from '@mui/material';\n\nexport const StyledPaper = styled(Paper)`\n  background-color: ${p=>p.theme.colors.background};\n  padding: ${p=>p.theme.space[4]}px;\n  text-indent: ${p=>p.theme.space[4]}px;\n  font-style: italic ;\n  border-radius: ${p=>p.theme.radii.md};\n  max-width: 245px;\n`;\n\nexport const StyledParagraph = styled(Typography)``;\n","import { useEffect, useState } from 'react';\n\nimport { StyledPaper, StyledParagraph } from './FromAuthor.styled';\n\nimport content from './data.json';\n\nconst FromAuthor = () => {\n  const [currentInd, setCurrentInd] = useState(\n    () => Math.floor(Math.random() * -9) + 10\n  );\n\n  useEffect(() => {\n    const getRandomInd = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    const intervalId = setInterval(() => {\n      const newInd = getRandomInd(0, content.length - 1);\n      setCurrentInd(newInd);\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <StyledPaper elevation={0}>\n      <StyledParagraph paragraph variant=\"body1\">\n        \"{content[currentInd].text}\"\n      </StyledParagraph>\n      <StyledParagraph paragraph variant=\"body1\">\n        {content[currentInd].author}\n      </StyledParagraph>\n    </StyledPaper>\n  );\n};\n\nexport default FromAuthor;\n","import { Box, styled } from '@mui/material';\n\nexport const StyledSideBar = styled(Box)`\n  position: relative;\n  width: 260px;\n  box-shadow: 26px -2px 10px -30px rgba(0, 0, 0, 0.66);\n  min-height: 88vh;\n`;\n\nexport const StyledSidebarThumb = styled(Box)`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const StyledContentWrap = styled(Box)`\n  padding: ${p => p.theme.space[4]}px;\n  flex-grow: 1;\n`;\n","import { Box, LinearProgress, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { Outlet } from 'react-router';\nimport { Suspense, useEffect } from 'react';\n\nimport ContactForm from 'components/ContactForm';\n\nimport Filter from 'components/Filter';\nimport FromAuthor from 'components/FromAuthor';\n\nimport useAuth from 'hooks/useAuth';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nimport {\n  StyledSideBar,\n  StyledSidebarThumb,\n  StyledContentWrap,\n} from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { isLogIn } = useAuth();\n\n  useEffect(() => {\n    if (isLogIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLogIn]);\n\n  return (\n    <Box display=\"flex\">\n      <StyledSideBar as=\"aside\">\n        <StyledSidebarThumb>\n          <Typography as=\"h1\" variant=\"h5\" my={0}>\n            My PhoneBook\n          </Typography>\n\n          <ContactForm />\n          <Filter />\n          <FromAuthor />\n        </StyledSidebarThumb>\n      </StyledSideBar>\n\n      <StyledContentWrap>\n        <Suspense fallback={<LinearProgress color=\"secondary\" />}>\n          <Outlet />\n        </Suspense>\n      </StyledContentWrap>\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectContactsFilter], (contacts, contactsFilter) => {\n        const filteredContacts = contacts?.filter(({ name }) =>\n            name.toLowerCase().includes(contactsFilter.toLowerCase())\n        );\n\n        return filteredContacts;\n    }\n);"],"names":["StyledForm","styled","Form","p","theme","space","radii","md","colors","background","Input","Field","sm","StyledButton","Button","primary","text","secondary","white","dispatch","useDispatch","contacts","useSelector","selectContacts","nameInputId","nanoid","numberInputId","validationSchema","yup","shape","name","required","matches","number","initialValues","onSubmit","value","resetForm","normalizedName","toLowerCase","find","includes","alert","addContact","htmlFor","id","type","autoComplete","component","style","color","Box","TextField","selectContactsFilter","isContactsLoading","selectContactsIsLoading","useEffect","setFilter","as","e","preventDefault","onChange","currentTarget","size","StyledPaper","Paper","StyledParagraph","Typography","useState","Math","floor","random","currentInd","setCurrentInd","intervalId","setInterval","min","max","newInd","content","clearInterval","elevation","paragraph","variant","author","StyledSideBar","StyledSidebarThumb","StyledContentWrap","isLogIn","useAuth","fetchContacts","display","my","Suspense","fallback","LinearProgress","state","items","isLoading","filter","selectFilteredContacts","createSelector","contactsFilter"],"sourceRoot":""}